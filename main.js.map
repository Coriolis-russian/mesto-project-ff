{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/index.js","webpack://mesto-project-ff/./src/cards.js"],"sourcesContent":["/**\r\n * Модуль для работы с картами\r\n */\r\n\r\n/**\r\n * Создать карточку\r\n * @param {Element} template - DOM-элемент шаблона карты\r\n * @param {object{title,image,delBtn,likeBtn,like}} classNames - css классы с описанием ключевых элементов карты\r\n * @param {{name:string,link:string}} cardInfo - Название места и ссылка на картинку\r\n * @param {function(Element)} onDelete - функция для удаления карты, в параметре принимает карту\r\n * @param {function(Element,Element)} onInvertLike - функция проставления или снятия лайка карте\r\n * @param {function(image: string, name: string, alt: string)} onImageClick - обработчик клика по картинке в карточке\r\n * @return Element\r\n * DOM-элемент созданной карты\r\n */\r\nexport function createCard(\r\n  template,\r\n  classNames,\r\n  cardInfo,\r\n  onDelete,\r\n  onInvertLike,\r\n  onImageClick\r\n) {\r\n  const card = template.cloneNode(true);\r\n  card.querySelector('.' + classNames.title).textContent = cardInfo.name;\r\n  const img = card.querySelector('.' + classNames.image);\r\n  img.src = cardInfo.link;\r\n  img.alt = cardInfo.name;\r\n\r\n  card\r\n    .querySelector('.' + classNames.delBtn)\r\n    .addEventListener('click', () => onDelete(card));\r\n\r\n  const likeBtn = card.querySelector('.' + classNames.likeBtn);\r\n  card\r\n    .querySelector('.' + classNames.likeBtn)\r\n    .addEventListener('click', () => onInvertLike(card, likeBtn));\r\n\r\n  card\r\n    .querySelector('.' + classNames.image)\r\n    .addEventListener('click', () =>\r\n      onImageClick(cardInfo.link, cardInfo.name, cardInfo.name)\r\n    );\r\n\r\n  return card;\r\n}\r\n\r\n/**\r\n * Удалить карточку\r\n * @param {Element} card - DOM-элемент с картой\r\n */\r\nexport function deleteCard(card) {\r\n  card.remove();\r\n}\r\n\r\n/**\r\n * Инвертировать состояние лайка на карте\r\n * @param {Element} card - DOM-элемент с картой\r\n * @param {Element} likeButton - DOM-элемент кнопки с сердечком\r\n */\r\nexport function invertLike(card, likeButton) {\r\n  likeButton.classList.toggle('card__like-button_is-active');\r\n}\r\n","/**\r\n * Модуль для работы с модальными окнами.\r\n * Для первичной разовой настройки вызвать initModal,\r\n * для открытия диалога - openModal,\r\n * для закрытия closeModal.\r\n */\r\n\r\nconst openedDialog = {\r\n  node: undefined,\r\n  // добавил эту возможность ради искусства\r\n  onCloseByUserHandler: undefined,\r\n  classNames: undefined\r\n};\r\n\r\n/**\r\n * Открыть всплывающий диалог\r\n * @param {Element} dialog - DOM-элемент диалога\r\n * @param {Object} classNames - css классы элементов диалога\r\n * @param {function(Element): boolean} onCloseByUser - необязательный обработчик для отлова момента закрытия\r\n * пользователем, может вернуть false если нужно предотвратить закрытие\r\n */\r\nexport function openModal(classNames, dialog, onCloseByUser = undefined) {\r\n  dialog.classList.add(classNames.opener);\r\n  document.addEventListener('keydown', closeByEscHandler);\r\n  openedDialog.node = dialog;\r\n  openedDialog.onCloseByUserHandler = onCloseByUser;\r\n  openedDialog.classNames = classNames;\r\n}\r\n\r\n/**\r\n * Закрыть всплывающий диалог\r\n * @param {Element} dialog - DOM-элемент открытого диалога\r\n */\r\nexport function closeModal(dialog) {\r\n  dialog.classList.remove(openedDialog.classNames.opener);\r\n  document.removeEventListener('keydown', closeByEscHandler);\r\n  openedDialog.node = undefined;\r\n}\r\n\r\n/** Первичная разовая настройка модуля.\r\n * @param classNames\r\n */\r\nexport function initModal(classNames) {\r\n  const dialogs = document.querySelectorAll('.' + classNames.dialog);\r\n  dialogs.forEach(function (dialog) {\r\n    // принципиально mousedown а не click, иначе если выделять текст и\r\n    // отпустить на backdrop - закроется хотя не ожидаем\r\n    dialog.addEventListener('mousedown', closeByBackdropOrBtnClickHandler);\r\n    // предотвратить скролл контента под модальным окном: просто не пускать события скрола\r\n    dialog.addEventListener('wheel', blockWheel);\r\n  });\r\n}\r\n\r\nfunction closeByEscHandler(keyEvent) {\r\n  if (keyEvent.key === 'Escape') {\r\n    if (\r\n      openedDialog.onCloseByUserHandler &&\r\n      !openedDialog.onCloseByUserHandler(openedDialog.node)\r\n    ) {\r\n      return;\r\n    }\r\n    closeModal(openedDialog.node);\r\n    keyEvent.stopPropagation();\r\n  }\r\n}\r\n\r\nfunction closeByBackdropOrBtnClickHandler(mouseEvent) {\r\n  // пользуемся тем что у кнопки свой класс\r\n  if (\r\n    mouseEvent.target.classList.contains(openedDialog.classNames.dialog) ||\r\n    mouseEvent.target.classList.contains(openedDialog.classNames.closeButton)\r\n  ) {\r\n    mouseEvent.stopPropagation();\r\n    if (\r\n      openedDialog.onCloseByUserHandler &&\r\n      !openedDialog.onCloseByUserHandler(openedDialog.node)\r\n    ) {\r\n      return;\r\n    }\r\n    closeModal(openedDialog.node);\r\n  }\r\n}\r\n\r\nfunction blockWheel(evt) {\r\n  evt.preventDefault();\r\n}\r\n","import './pages/index.css';\r\n\r\nimport { initialCards } from './cards';\r\nimport { createCard, deleteCard, invertLike } from './components/card';\r\nimport { openModal, closeModal, initModal } from './components/modal';\r\n\r\n// //////// DOM узлы \\\\\\\\\\\\\\\\\r\nconst popupClassNames = {\r\n  dialog: 'popup',\r\n  opener: 'popup_is-opened',\r\n  closeButton: 'popup__close',\r\n};\r\n\r\nconst cardClassNames = {\r\n  title: 'card__title',\r\n  image: 'card__image',\r\n  delBtn: 'card__delete-button',\r\n  likeBtn: 'card__like-button',\r\n  like: 'card__like-button_is-active',\r\n};\r\n\r\n// шаблон карточки\r\nconst cardTemplateHolder = document.querySelector('#card-template');\r\nconsole.assert(\r\n  !!cardTemplateHolder,\r\n  'Не найден шаблон карт \"card-template\" в html файле'\r\n);\r\n\r\nconst docCard = {\r\n  template: cardTemplateHolder.content.querySelector('.card'),\r\n  // тут лежат карты (список карт)\r\n  holder: document.querySelector('.page .places__list'),\r\n  form: document.forms['new-place'],\r\n  addButton: document.querySelector('.page .profile__add-button'),\r\n  addDialog: document.querySelector('.page .popup_type_new-card'),\r\n  imageViewDialog: document.querySelector('.page .popup_type_image'),\r\n  imageViewDialogImage: document.querySelector(\r\n    '.page .popup_type_image .popup__image'\r\n  ),\r\n  imageViewDialogCaption: document.querySelector(\r\n    '.page .popup_type_image .popup__caption'\r\n  ),\r\n};\r\n\r\n// профиль\r\nconst docProfile = {\r\n  editButton: document.querySelector('.page .profile__edit-button'),\r\n  editDialog: document.querySelector('.page .popup_type_edit'),\r\n  saveButton: document.querySelector('.page .profile__add-button'),\r\n  titleHolder: document.querySelector('.page .profile__title'),\r\n  descHolder: document.querySelector('.page .profile__description'),\r\n  form: document.forms['edit-profile'],\r\n};\r\n// \\\\\\\\\\\\\\\\ DOM узлы ////////\r\n\r\n// //////// Профиль \\\\\\\\\\\\\\\\\r\n// открыть диалог редактирования профиля\r\nfunction handleProfileEditButtonClick() {\r\n  docProfile.form.name.value = docProfile.titleHolder.textContent;\r\n  docProfile.form.description.value = docProfile.descHolder.textContent;\r\n  openModal(popupClassNames, docProfile.editDialog);\r\n}\r\n\r\n// обработчик события нажатия на кнопку \"сохранить\" в диалоге редактирования профиля\r\nfunction handleSaveProfile(evt) {\r\n  evt.preventDefault();\r\n  docProfile.titleHolder.textContent = docProfile.form.name.value;\r\n  docProfile.descHolder.textContent = docProfile.form.description.value;\r\n  closeModal(docProfile.editDialog);\r\n}\r\n\r\n// --------- Регистрация событий для профиля ---------\r\n// нажатие на кнопку 'редактировать' профиля\r\ndocProfile.editButton.addEventListener('click', handleProfileEditButtonClick);\r\n// нажатие на кнопку 'сохранить' в диалоге профиля\r\ndocProfile.form.addEventListener('submit', handleSaveProfile);\r\n// \\\\\\\\\\\\\\\\ Профиль ////////\r\n\r\n// //////// Карточка \\\\\\\\\\\\\\\\\r\n// открыть диалог добавления нового места\r\nfunction handleNewPlaceButtonClick() {\r\n  // Очистить поля ДО открытия, т.к. после прошлой отмены они тут так и\r\n  // останутся (и так задумано, для красоты, см saveCardAddPlaceDialogData)\r\n  docCard.form.reset();\r\n  openModal(popupClassNames, docCard.addDialog);\r\n}\r\n\r\n// сохранить новое место из диалога добавления\r\nfunction handleSaveNewPlace(evt) {\r\n  evt.preventDefault();\r\n  const cardInfo = {\r\n    name: docCard.form.elements['place-name'].value,\r\n    link: docCard.form.elements['link'].value,\r\n  };\r\n  const newCard = createCard(\r\n    docCard.template,\r\n    cardClassNames,\r\n    cardInfo,\r\n    deleteCard,\r\n    invertLike,\r\n    showCardFullSizeImage\r\n  );\r\n  docCard.holder.prepend(newCard);\r\n  // в конце не очищаю форму, что бы при плавном исчезновении текст оставался в ней до конца\r\n  closeModal(docCard.addDialog);\r\n}\r\n\r\n// открыть диалог просмотра фотографии места\r\nfunction showCardFullSizeImage(image, name, alt) {\r\n  docCard.imageViewDialogImage.src = image;\r\n  docCard.imageViewDialogImage.alt = alt;\r\n  docCard.imageViewDialogCaption.textContent = name;\r\n  openModal(popupClassNames, docCard.imageViewDialog);\r\n}\r\n\r\n// --------- Регистрация событий для карточек ---------\r\n// нажатие на кнопку 'новое место'\r\ndocCard.addButton.addEventListener('click', handleNewPlaceButtonClick);\r\n// нажатие на кнопку 'сохранить' в диалоге добавления нового места\r\ndocCard.form.addEventListener('submit', handleSaveNewPlace);\r\n// \\\\\\\\\\\\\\\\ Карточка ////////\r\n\r\n// Настройка модулей.\r\n// Все имена классов оставляем по умолчанию.\r\ninitModal(popupClassNames);\r\n\r\n// Инициализирующий страницу код\r\n// вывести заготовленные в cards.js карточки на страницу\r\ninitialCards.forEach((cardInfo) => {\r\n  const card = createCard(\r\n    docCard.template,\r\n    cardClassNames,\r\n    cardInfo,\r\n    deleteCard,\r\n    invertLike,\r\n    showCardFullSizeImage\r\n  );\r\n  docCard.holder.append(card);\r\n});\r\n","export const initialCards = [\r\n    {\r\n      name: \"Архыз\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg\",\r\n    },\r\n    {\r\n      name: \"Челябинская область\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg\",\r\n    },\r\n    {\r\n      name: \"Иваново\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg\",\r\n    },\r\n    {\r\n      name: \"Камчатка\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg\",\r\n    },\r\n    {\r\n      name: \"Холмогорский район\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg\",\r\n    },\r\n    {\r\n      name: \"Байкал\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg\",\r\n    }\r\n];"],"names":["createCard","template","classNames","cardInfo","onDelete","onInvertLike","onImageClick","card","cloneNode","querySelector","title","textContent","name","img","image","src","link","alt","delBtn","addEventListener","likeBtn","deleteCard","remove","invertLike","likeButton","classList","toggle","openedDialog","node","undefined","onCloseByUserHandler","openModal","dialog","onCloseByUser","arguments","length","add","opener","document","closeByEscHandler","closeModal","removeEventListener","keyEvent","key","stopPropagation","closeByBackdropOrBtnClickHandler","mouseEvent","target","contains","closeButton","blockWheel","evt","preventDefault","popupClassNames","cardClassNames","like","cardTemplateHolder","console","assert","docCard","content","holder","form","forms","addButton","addDialog","imageViewDialog","imageViewDialogImage","imageViewDialogCaption","docProfile","editButton","editDialog","saveButton","titleHolder","descHolder","showCardFullSizeImage","value","description","reset","elements","newCard","prepend","querySelectorAll","forEach","append"],"sourceRoot":""}